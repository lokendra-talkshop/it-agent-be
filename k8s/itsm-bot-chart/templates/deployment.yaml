apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-backend
    spec:
      initContainers:
        - name: migration
          image: {{ .Values.image.repository }}
          command: ["npx", "prisma", "migrate", "deploy"]
          env:
            - name: POSTGRES_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_URL
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_DB
            - name: POSTGRES_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_WRITE_URL
      containers:
        - name: backend
          image: {{ .Values.image.repository }}
          livenessProbe:
            httpGet:
              path: /healthy
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.service.port }}
            initialDelaySeconds: 0
            periodSeconds: 60
            failureThreshold: 2
          env:
            - name: GOOGLE_CLIENT_ID
              valueFrom: 
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: GOOGLE_CLIENT_ID
            - name: SETTING
              valueFrom: 
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: SETTING
            - name: IS_TOKEN_ENCRYPTED
              valueFrom: 
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: IS_TOKEN_ENCRYPTED
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.awsSecretName }}
                  key: AWS_ACCESS_KEY
            - name: AWS_ACCESS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.awsSecretName }}
                  key: AWS_SECRET_KEY
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.openAiSecretName }}
                  key: OPENAI_API_KEY
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: ENVIRONMENT
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: REDIS_URL
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_DB
            - name: POSTGRES_READ_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_READ_URL
            - name: POSTGRES_WRITE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecretName }}
                  key: POSTGRES_WRITE_URL
            - name: CRYPTO_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tokenSecretName }}
                  key: CRYPTO_KEY
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tokenSecretName }}
                  key: JWT_SECRET
            - name: REFRESH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tokenSecretName }}
                  key: REFRESH_SECRET
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: role
                    operator: In
                    values:
                      - {{ .Values.nodeAffinity.role }}
                  - key: application
                    operator: In
                    values:
                      - {{ .Values.nodeAffinity.application }}